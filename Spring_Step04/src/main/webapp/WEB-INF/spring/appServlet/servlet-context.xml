<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">

	<context:component-scan base-package="com.min.edu"/>
	<mvc:annotation-driven/>
	
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/views/"/>
		<property name="suffix" value=".jsp"/>
	</bean>
	
	<!-- TODO 011 properties 파일을 사용하기 위한 bean -->
	<context:property-placeholder location="classpath:properties/db.properties" file-encoding="UTF-8"/>
	
	<!--TODO 026 Transaction은 init-param으로 처리해야한다
			root-context(Context)에 있는 TransactionManager을 사용하여 MVC의 동작에서 TRANSACTION을 처리해줌
			service에서 dao를 좋바하고
			단일(Unit)기능의 dao 메소드에 예외가 발생햇을 경우 자동으로 해당 메소드를 취소 (rollback)시킨다
			이러한 관리를 service에서 하게 된다
			Annotation 방식으로 transaction처리
	  -->
	  
	  <tx:annotation-driven transaction-manager="transactionManager"/>
</beans>





























